node('docker') {
  stage('Checkout'){
    checkout scm
  }
  stage('Build Docker'){
    withCredentials([ usernamePassword(credentialsId: 'dockerhubess',usernameVariable: 'docker_user',passwordVariable: 'docker_password' )]) {
      sh 'docker login -u essdmscdm -p $docker_password '
      def IMAGE_ID = sh ( script: 'git rev-parse HEAD',returnStdout: true).trim()
      sh "docker build --file CI/ESS/Dockerfile.dmscprod  . --tag dacat/landing:latest -t dacat/landing:${IMAGE_ID}dmscprod" 
      echo "Git image id : ${IMAGE_ID}"
      sh "docker push dacat/landing:${IMAGE_ID}dmscprod"
      sh "docker build --file CI/ESS/Dockerfile.dmscprod  .  -t dacat/landing:${IMAGE_ID}dmscdev --build-arg env=dmscdev" 
      sh "docker push dacat/landing:${IMAGE_ID}dmscdev"
      sh "docker build --file CI/ESS/Dockerfile.hub  . --tag dacat/landing:latest -t dacat/landing:${IMAGE_ID}dev" 
      sh "docker push dacat/landing:${IMAGE_ID}dev"
      sh "docker push dacat/landing:latest"
    }
  }
  stage('Unit Test Catanie '){
    // unit tests require mongodb container
    //sh 'docker run  -t dacat/landing:latest npm run -- ng test --watch false --single-run true -v ./test:./test '
  }
}
